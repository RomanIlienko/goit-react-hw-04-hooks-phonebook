{"version":3,"sources":["components/TodoContact/TodoContact.module.css","components/TodoContact/TodoContact.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js","components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","TodoContact","onSubmit","useState","name","setName","number","setNumber","handleChange","event","currentTarget","value","reset","className","s","Wrapper","titleText","e","preventDefault","headStyle","labelStyle","inputStyle","type","onChange","pattern","button","ContactsList","contacts","onDeleteContact","map","id","listItem","contact","onClick","Filter","filterTitle","Contacts","Input","defaultProps","filterValue","App","JSON","parse","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","normalizedFilter","toLowerCase","visibleContacts","todo","includes","shortid","generate","alreadyInContacts","find","alert","prevState","ReactDOM","render","StrictMode","classNAme","document","getElementById"],"mappings":"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","file":"static/js/main.a424cb04.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"TodoContact_Wrapper__2G0nY\",\"headStyle\":\"TodoContact_headStyle__1W19-\",\"labelStyle\":\"TodoContact_labelStyle__zRPtT\",\"inputStyle\":\"TodoContact_inputStyle__2XT8w\",\"button\":\"TodoContact_button__1LCa2\",\"titleText\":\"TodoContact_titleText__TDz4V\"};","import { useState } from 'react';\nimport s from './TodoContact.module.css';\nimport PropTypes from \"prop-types\";\n\nfunction TodoContact({ onSubmit }) {\n    const [name,setName] = useState('') \n    const [number, setNumber] = useState('')\n\n    const handleChange = event => {\n        const { name, value } = event.currentTarget\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'number':\n                setNumber(value);\n                break;\n            default:\n                return;\n        }\n    }\n\n\n    const handleSubmit = e => {\n      e.preventDefault();\n      onSubmit(name, number);\n      reset();\n    };\n\n    const reset = () => {\n        setName('');\n        setNumber('');\n    };\n\n  \n    return (\n      <div>\n        <div className={s.Wrapper}>\n          <h1 className={s.titleText}>Phonebook</h1>\n        </div>\n        <form onSubmit={handleSubmit} className={s.headStyle}>\n          <label className={s.labelStyle}>\n            Name\n            <input\n              className={s.inputStyle}\n              type='text'\n              name=\"name\"\n              value={name}\n              onChange={handleChange}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            />\n          </label>\n          <label className={s.labelStyle}>\n            Number\n            <input\n              className={s.inputStyle}\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={handleChange}\n            />\n          </label>\n          <button type=\"submit\" className={s.button}>\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n}\n\nTodoContact.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n}\n\nexport default TodoContact;\n\n// class TodoContact extends Component {\n//   state = {\n//     name: '',\n//     number: '',\n//   };\n\n//   handleChange = e => {\n//     const { name, value } = e.currentTarget;\n    \n//     this.setState({ [name]: value });\n//   };\n\n//   handleSubmit = e => {\n//     e.preventDefault();\n\n//     this.props.onSubmit(this.state.name, this.state.number);\n\n//     this.reset();\n//   };\n\n//   reset = () => {\n//     this.setState({ name: '', number: '' });\n//   };\n\n//   render() {\n//     return (\n//       <div>\n//         <div className={s.Wrapper}>\n//           <h1 className={s.titleText}>Phonebook</h1>\n//         </div>\n//         <form onSubmit={this.handleSubmit} className={s.headStyle}>\n//           <label className={s.labelStyle}>\n//             Name\n//             <input\n//               className={s.inputStyle}\n//               name=\"name\"\n//               value={this.state.name}\n//               onChange={this.handleChange}\n//             />\n//           </label>\n//           <label className={s.labelStyle}>\n//             Number\n//             <input\n//               className={s.inputStyle}\n//               name=\"number\"\n//               value={this.state.number}\n//               onChange={this.handleChange}\n//             />\n//           </label>\n//           <button type=\"submit\" className={s.button}>\n//             Add contact\n//           </button>\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n\n","import React from 'react';\nimport s from './ContactsList.module.css';\nimport PropTypes from 'prop-types';\n// import shortid from 'shortid';\n\nconst ContactsList = ({ contacts, onDeleteContact }) => (\n  <ul className={s.contacts}>\n    {contacts.map(({ id, name, number }) => (\n      <li className={s.listItem} key={id}>\n        <p className={s.contact}>\n          {name}: {number}\n        </p>\n        <button\n          type=\"button\"\n          className={s.button}\n          onClick={() => onDeleteContact(id)}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactsList;","import React from 'react';\nimport s from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => (\n  <div className={s.filterTitle}>\n    <h2 className={s.Contacts}>Contacts</h2>\n    <label className={s.labelStyle}>\n      Find contacts by name\n      <input type=\"text\" value={value} onChange={onChange} className={s.Input}/>\n    </label>\n  </div>\n);\n\nFilter.defaultProps = {\n  filterValue: '',\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;","import { useState, useEffect } from 'react';\n// import TodoContact from './components/TodoContact';\nimport TodoContact from './components/TodoContact';\nimport ContactsList from './components/ContactsList';\nimport Filter from './components/Filter';\n\nimport shortid from 'shortid';\n\nconst App = () => {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(localStorage.getItem('contacts')) ?? [];\n  })\n  const [filter, setFilter] = useState('')\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts))\n  }, [contacts])\n\n  const addContact = (name, number) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    \n\n    const alreadyInContacts = contacts.find(\n      contact => contact.name === name && contact.number === number,\n    );\n\n    if (alreadyInContacts) {\n      alert(`${alreadyInContacts.name} is already in contacts.`);\n      \n      return;\n    }\n    if (contact.name === '') {\n      alert('Please enter data');\n\n      return\n    }\n    if (contact.number === '') {\n      alert('Please enter the number')\n\n      return\n    }\n    else {\n      setContacts(prevState => [\n        ...prevState, contact]\n      );\n    }\n      \n    };\n\n    const ChangeFilter = e => {\n      const { value } = e.currentTarget;\n\n      setFilter(value)\n    };\n\n    const deleteContact = id => {\n      setContacts(prevState => ({\n        contacts: prevState.contacts.filter(contact => contact.id !== id),\n      }));\n    };\n\n  \n    const normalizedFilter = filter.toLowerCase();\n    const visibleContacts = contacts.filter(todo =>\n      todo.name.toLowerCase().includes(normalizedFilter),\n    );\n\n\n    return (\n      <>\n        <TodoContact onSubmit={addContact} />\n        <Filter value={filter} onChange={ChangeFilter} />\n        <ContactsList\n          contacts={visibleContacts}\n          onDeleteContact={deleteContact}\n        />\n      </>\n    )\n  }\n\nexport default App\n// class App extends Component {\n//   state = {\n//     contacts: [],\n//     filter: '',\n//   };\n\n//   componentDidMount() {\n//     const localContacts = localStorage.getItem('contacts')\n//     const parsedContacts = JSON.parse(localContacts)\n\n//     if (parsedContacts) {\n//       this.setState({ contacts: parsedContacts })\n//     }\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (this.state.contacts !== prevState.contacts) {\n//       localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n//     }\n//   }\n\n//   addContact = (name, number) => {\n//     const todo = {\n//       id: shortid.generate(),\n//       name,\n//       number,\n//     };\n//     const { contacts } = this.state;\n//     const alreadyInContacts = contacts.find(\n//       contact => contact.name === todo.name && contact.number === todo.number,\n//     );\n//     if (alreadyInContacts) {\n//       alert(`${alreadyInContacts.name} is already in contacts.`);\n//       return;\n//     }\n//     if (todo.name === '') {\n//       alert('Please enter data');\n//       return\n//     }\n//     if (todo.number === '') {\n//       alert('Please enter the number')\n//       return\n//     }\n//     this.setState(prevState => ({\n//       contacts: [todo, ...prevState.contacts],\n//     }));\n//   };\n\n//   ChangeFilter = e => {\n//     const { value } = e.currentTarget;\n\n//     this.setState({ filter: value });\n//   };\n\n//   deleteContact = todoId => {\n//     this.setState(prevState => ({\n//       contacts: prevState.contacts.filter(todo => todo.id !== todoId),\n//     }));\n//   };\n\n//   render() {\n//     const normalizedFilter = this.state.filter.toLowerCase();\n//     const visibleTodos = this.state.contacts.filter(todo =>\n//       todo.name.toLowerCase().includes(normalizedFilter),\n//     );\n\n//     return (\n//       <>\n//         {/* <TodoContact onSubmit={this.addContact} /> */}\n//         <TodoContacts onSubmit={this.addContact} />\n//         <Filter value={this.state.filter} onChange={this.ChangeFilter} />\n//         <ContactsList\n//           contacts={visibleTodos}\n//           onDeleteContact={this.deleteContact}\n//         />\n//       </>\n//     );\n//   }\n// }\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport s from './App.module.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App classNAme={s.App}/>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactsList_contacts__31LkF\",\"contact\":\"ContactsList_contact__1wn_7\",\"listItem\":\"ContactsList_listItem__jm0_d\",\"button\":\"ContactsList_button__39oep\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"labelStyle\":\"Filter_labelStyle__1VgLT\",\"Input\":\"Filter_Input__3iNH_\",\"Contacts\":\"Filter_Contacts__qrpgL\",\"filterTitle\":\"Filter_filterTitle__3TyAP\"};"],"sourceRoot":""}